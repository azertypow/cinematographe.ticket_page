app.factory("BucketService",(function($http,$q){var bucketService={};bucketService.assign=function(buckets,tickettype,now,roles,callback){var forcing=[];var bucketed={};var match=_.find(buckets,(function(bucket){var is_match=bucketService._match(bucket,[tickettype],now,roles);var is_full=bucket.available<=0;if(is_match&&is_full){bucket.may_steal_from.forEach((function(victim_id){forcing.push({matching:bucket._id,assigned:victim_id})}))}return is_match&&!is_full}));if(match){bucketed.screening_bucket={matching:match._id,assigned:match._id};return callback?callback(null,bucketed):bucketed}var forced=_.find(forcing,(function(force){var victim=_.findWhere(buckets,{_id:force.assigned});return victim&&victim.available>0}));if(forced){bucketed.screening_bucket=forced;return callback?callback(null,bucketed):bucketed}return callback?callback(null,null):null},bucketService.sync_assign=function(buckets,tickettype,now,roles){var forcing=[];var bucketed={};var match=_.find(buckets,(function(bucket){var is_match=bucketService._match(bucket,[tickettype],now,roles);var is_full=bucket.available<=0;if(is_match&&is_full){bucket.may_steal_from.forEach((function(victim_id){forcing.push({matching:bucket._id,assigned:victim_id})}))}return is_match&&!is_full}));if(match){bucketed.screening_bucket={matching:match._id,assigned:match._id};return bucketed}var forced=_.find(forcing,(function(force){var victim=_.findWhere(buckets,{_id:force.assigned});return victim&&victim.available>0}));if(forced){bucketed.screening_bucket=forced;return bucketed}return null},bucketService.get_available_seats=function(buckets,tickettypes,now,roles){var matchable_buckets=buckets.filter((function(bucket){return bucketService._match(bucket,tickettypes,now,roles)}));var stealable_ids=_.uniq(_.flatten(_.pluck(matchable_buckets,"may_steal_from")));return buckets.reduce((function(memo,bucket){if(_.contains(_.pluck(matchable_buckets,"_id"),bucket._id))return memo+bucket.available;if(_.contains(stealable_ids,bucket._id))return memo+bucket.available;return memo}),0)};bucketService.get_total_seats=function(buckets){return buckets.reduce((function(memo,bucket){return memo+bucket.total_capacity}),0)};bucketService.get_unconfirmed_seats=function(buckets){return buckets.reduce((function(memo,bucket){return memo+bucket.unconfirmed}),0)};bucketService.get_confirmed_seats=function(buckets){return buckets.reduce((function(memo,bucket){return memo+bucket.confirmed}),0)};bucketService.get_used_seats=function(buckets){return buckets.reduce((function(memo,bucket){return memo+bucket.scanned}),0)};bucketService._match=function(bucket,tickettypes,now,roles){if(tickettypes&&!Array.isArray(tickettypes))tickettypes=[tickettypes];var rules=bucket.rules;if("not_after"in rules&&moment(now).isAfter(rules.not_after))return false;if("not_before"in rules&&moment(now).isBefore(rules.not_before))return false;if(tickettypes&&"only_for_tickettypes"in rules){var intersection=_.intersection(rules.only_for_tickettypes,tickettypes);if(intersection.length===0)return false}if("only_for_roles"in rules){var intersection=_.intersection(rules.only_for_roles,roles);if(intersection.length===0)return false}return true};return bucketService}));
